"use strict";(()=>{var e={};e.id=240,e.ids=[240],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},79:e=>{e.exports=import("openai")},130:(e,r,t)=>{t.a(e,async(e,a)=>{try{t.r(r),t.d(r,{config:()=>l,default:()=>i,routeModule:()=>d});var o=t(802),s=t(44),n=t(249),u=t(26),c=e([u]);u=(c.then?(await c)():c)[0];let i=(0,n.l)(u,"default"),l=(0,n.l)(u,"config"),d=new o.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/feedback",pathname:"/api/feedback",bundlePath:"",filename:""},userland:u});a()}catch(e){a(e)}})},26:(e,r,t)=>{t.a(e,async(e,a)=>{try{t.r(r),t.d(r,{default:()=>handler});var o=t(79),s=e([o]);o=(s.then?(await s)():s)[0];let n=new o.OpenAI({apiKey:process.env.OPENAI_API_KEY});async function handler(e,r){if("POST"!==e.method)return r.status(405).json({error:"Method not allowed"});let{messages:t}=e.body;if(!t||!Array.isArray(t))return r.status(400).json({error:"Invalid request format"});try{let e=await n.chat.completions.create({model:"gpt-3.5-turbo",messages:t,temperature:.7}),a=e.choices[0]?.message?.content;console.log("\uD83E\uDDE0 AI Response:",a);let o=a?.match(/\{[\s\S]*\}/);if(console.log("\uD83D\uDCE6 Matched JSON:",o),!o)return r.status(500).json({error:"Failed to parse structured feedback from AI response."});let s=JSON.parse(o[0]);return r.status(200).json(s)}catch(e){return console.error("OpenAI API Error:",e),r.status(500).json({error:e.message||"Internal Server Error"})}}a()}catch(e){a(e)}})}};var r=require("../../webpack-api-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),t=r.X(0,[222],()=>__webpack_exec__(130));module.exports=t})();